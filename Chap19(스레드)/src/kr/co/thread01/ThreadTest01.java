package kr.co.thread01;
/*
 * 1. Thread 클래스를 상속 받아 생성하는 방법
 *  - run() 메서드를 오버라이딩
 *  - 실행 스레드로 자신의 콜 스택을 가진 독립적인 프로세스
 */
class MyThread extends Thread {
	
	@Override
	public void run() {		// 스레드의 실행코드가 작성되는 메소드

		System.out.println(Thread.currentThread() + " Start!");
		
		int i;
		for(i = 0; i < 200; i++) {
			System.out.print(i + "\t");
		}
		System.out.println();
		System.out.println(Thread.currentThread() + " End!");
	}
}

public class ThreadTest01 {

	public static void main(String[] args) {	// main thread
		
		System.out.println(Thread.currentThread() + " Start!");

		MyThread thread1 = new MyThread();
		MyThread thread2 = new MyThread();
		thread1.start();	// 스레드가 시작되도록 요청하는 메소드
							// JVM은 해당 스레드의 run() 메소드를 호출
		thread2.start();

		System.out.println(Thread.currentThread() + " End!");
		/*
			main 스레드 / 5max / main 에 포함

			Thread[main,5,main] Start!
			Thread[main,5,main] End!
			Thread[Thread-0,5,main] Start!
			Thread[Thread-1,5,main] Start!
			0	0	1	2	3	4	5	6	7	8	9	10	1	2	3	4	11	12	13	14	15	16	17	18	19	20	5	21	22	6	7	8	9	10	11	23	12	13	14	15	16	17	18	19	20	21	22	23	24	25	26	27	28	29	30	31	32	24	25	26	27	28	29	30	31	32	33	34	35	36	37	38	39	40	41	42	43	44	45	46	47	48	49	50	51	52	53	33	34	35	36	37	38	39	40	54	55	41	42	43	44	45	46	47	48	49	50	51	52	53	54	55	56	57	58	56	57	58	59	60	61	62	63	64	65	66	59	67	68	69	70	71	72	73	74	75	76	77	78	79	80	81	82	83	84	85	86	87	88	89	90	91	92	93	94	95	96	97	98	99	100	101	102	103	104	105	106	107	108	109	110	111	112	113	114	115	116	117	118	119	120	121	122	123	124	125	126	127	128	129	130	131	132	133	134	135	136	137	138	139	140	141	142	143	144	145	146	147	148	149	150	151	152	153	154	155	156	157	158	159	160	161	162	163	164	165	166	167	168	169	170	171	172	60	61	62	173	174	175	176	177	178	179	180	181	182	183	184	185	186	187	188	189	190	191	192	193	194	195	196	197	198	199	
			Thread[Thread-1,5,main] End!
			63	64	65	66	67	68	69	70	71	72	73	74	75	76	77	78	79	80	81	82	83	84	85	86	87	88	89	90	91	92	93	94	95	96	97	98	99	100	101	102	103	104	105	106	107	108	109	110	111	112	113	114	115	116	117	118	119	120	121	122	123	124	125	126	127	128	129	130	131	132	133	134	135	136	137	138	139	140	141	142	143	144	145	146	147	148	149	150	151	152	153	154	155	156	157	158	159	160	161	162	163	164	165	166	167	168	169	170	171	172	173	174	175	176	177	178	179	180	181	182	183	184	185	186	187	188	189	190	191	192	193	194	195	196	197	198	199	
			Thread[Thread-0,5,main] End!
		 */
	}
}
